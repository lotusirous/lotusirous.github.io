<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>devops on Kha&#39;s</title>
    <link>/categories/devops/</link>
    <description>Recent content in devops on Kha&#39;s</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 18 Aug 2019 12:50:37 +0900</lastBuildDate>
    
	<atom:link href="/categories/devops/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Build a go web application pipeline</title>
      <link>/post/build-go-application/</link>
      <pubDate>Sun, 18 Aug 2019 12:50:37 +0900</pubDate>
      
      <guid>/post/build-go-application/</guid>
      <description>&lt;p&gt;Build and deploy web application is necessary for any organization who uses golang as a main language to build their bushiness. This article summarized ways to build and deploy a golang application from a simple to a complex pipeline.
The decision depends on architecture designer&amp;rsquo;s style.
However, I recommend to follow 2 principles when designing a system: keep it simple and stupid (KISS) because you aren&amp;rsquo;t gonna need it (YAGNI).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Update all docker images</title>
      <link>/post/update-docker/</link>
      <pubDate>Thu, 01 Aug 2019 10:37:30 +0900</pubDate>
      
      <guid>/post/update-docker/</guid>
      <description>&lt;p&gt;Docker does not have a command to update images that you have already pulled in your system by default. Sometimes, we want to update image to latest version because of bugs or vulnerabilities. This action is similar to &lt;code&gt;apt update &amp;amp;&amp;amp; apt upgrade&lt;/code&gt; in debian-based system.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>